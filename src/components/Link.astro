---
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'a'> {
  href: `https://${string}` | `/${string}`
  size?: 'sm' | 'md' | 'lg' | 'xl'
  text?: 'white' | 'black' | 'blue'
  type?: 'primary' | 'secondary' | 'phantom'
  styles?: string
  content: string
}

const { href, size = 'md', text, styles, type, content } = Astro.props

const sizes = {
  sm: 'text-sm px-3 py-1',
  md: 'text-base px-4 py-2',
  lg: 'text-lg px-5 py-3',
  xl: 'text-xl px-6 py-4'
} as const

const AnchorSizes: Record<keyof typeof sizes, string> = {
  sm: sizes.sm,
  md: sizes.md,
  lg: sizes.lg,
  xl: sizes.xl
}

const texts = {
  white: 'text-white-snow',
  black: 'text-black-text',
  blue: 'text-blue-discord'
} as const

const types = {
  primary: 'bg-blue-discord',
  secondary: 'bg-black-text',
  phantom: 'bg-[#c2c5f9]'
} as const
---

<a
  role='link'
  href={href}
  class:list={[
    'flex items-center justify-center font-semibold rounded-lg font-inter gap-1 shadow-md text-md',
    AnchorSizes[size],
    texts[text as keyof typeof texts] ?? texts.black,
    types[type as keyof typeof types] ?? types.primary,
    styles
  ]}
>
  <slot name='left' />
  {content}
  <slot name='right' />
</a>
